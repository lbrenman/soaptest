{
	"schemaVersion": "4",
	"info": {
		"name": "Greet flow",
		"description": "Greets a user",
		"author": "support@axway.com",
		"license": "ISC"
	},
	"parameter": {
		"properties": {
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint.",
				"properties": {
					"username": {
						"type": "string",
						"description": "The username"
					}
				},
				"additionalProperties": false,
				"required": [
					"username"
				]
			},
			"request": {
				"type": "object",
				"description": "The HTTP request."
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false,
		"required": [
			"params",
			"request",
			"config",
			"env"
		]
	},
	"start": "mustache.2",
	"nodes": {
		"response.success": {
			"type": "nodehandler://axway-flow/http",
			"name": "Success (HTTP 200)",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"value": "200",
					"type": "number",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.value",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"response.error": {
			"type": "nodehandler://axway-flow/http",
			"name": "Bad Request (HTTP 400)",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"value": "400",
					"type": "number",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"mustache.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-mustache/mustache",
			"name": "createSoapMessage",
			"method": "format",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.params",
					"metaName": "Data",
					"metaDescription": "The value to assign to the \"data\" variable in the template."
				},
				{
					"name": "template",
					"type": "string",
					"value": "\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<soap:Envelope xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n  <soap:Body>\\n    <CapitalCity xmlns=\\\"http://www.oorsprong.org/websamples.countryinfo\\\">\\n      <sCountryISOCode>{{data.username}}</sCountryISOCode>\\n    </CapitalCity>\\n  </soap:Body>\\n</soap:Envelope>\"",
					"metaName": "Template",
					"metaDescription": "The Mustache template. e.g. `Hi {{data.user}}`."
				}
			],
			"outputs": {
				"next": {
					"context": "$.soapMessage.value",
					"routes": [
						"rest.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.soapMessage.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Format string"
		},
		"rest.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "callCountrySoapService",
			"method": "post",
			"parameters": [
				{
					"name": "url",
					"type": "string",
					"value": "\"http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso\"",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.soapMessage.value",
					"metaName": "Body",
					"metaDescription": "The content to send."
				},
				{
					"name": "headers",
					"type": "object",
					"value": "{\"Content-Type\": \"text/xml; charset=utf-8\"}",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"xml-node.1"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"response.error"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"response.error"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"response.error"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"response.error"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "POST"
		},
		"xml-node.1": {
			"type": "nodehandler://@axway-api-builder-ext/api-builder-plugin-fn-xml-node/xml-node",
			"name": "XML to JSON",
			"method": "xml2json",
			"parameters": [
				{
					"name": "xmlData",
					"type": "jsonpath",
					"value": "$.response.body",
					"metaName": "XML Input data",
					"metaDescription": "XML Data. For instance: $.soapResponse.body"
				}
			],
			"outputs": {
				"next": {
					"context": "$.jsonData",
					"routes": [
						"json.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"response.error"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "XML to JSON"
		},
		"json.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-json/json",
			"name": "Stringify",
			"method": "stringify",
			"parameters": [
				{
					"name": "value",
					"type": "jsonpath",
					"value": "$.jsonData[\"soap:Envelope\"][\"soap:Body\"][\"m:CapitalCityResponse\"][\"m:CapitalCityResult\"]",
					"metaName": "Value",
					"metaDescription": "The value to convert to a JSON string."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"json.2"
					],
					"context": "$.json",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"response.error"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Stringify"
		},
		"json.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-json/json",
			"name": "Parse",
			"method": "parse",
			"parameters": [
				{
					"name": "json",
					"type": "jsonpath",
					"value": "$.json",
					"metaName": "JSON",
					"metaDescription": "The JSON string to parse."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"response.success"
					],
					"context": "$.value",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"response.error"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Parse"
		}
	}
}